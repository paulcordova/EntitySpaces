<% 
/*
=========================================================================
    
    EntitySpaces 2010 
    Persistence Layer and Business Objects for Microsoft .NET 
    Copyright 2005 - 2010 EntitySpaces, LLC 
    EntitySpaces(TM) is a legal trademark of EntitySpaces, LLC 
    http://www.entityspaces.net 

    This template is bound by the EntitySpaces License Agreement which 
    is located here:

    http://www.entityspaces.net/portal/License/tabid/97/Default.aspx
    
=========================================================================
*/%><%@ TemplateInfo 
    UniqueID="4E7D25FC-7C23-480b-8579-5C81892B2DA0" 
    Title="Custom - Entity (C#)"   
    Description="The Concrete Collection Class" 
    Namespace="EntitySpaces.2024.C#.Custom" 
    Author="EntitySpaces, LLC"
    Version="2024.3.1.1"
    IsSubTemplate="True" %><%
//-------------------------------------------------------
// Extract the UI choices that we need
//-------------------------------------------------------	
string Namespace = (string)esMeta.Input["Namespace"];

//-------------------------------------------------------
// Create Local Variables
//-------------------------------------------------------	

//-------------------------------------------------------
// Begin Execution
//-------------------------------------------------------	
esPluginSource source = (esPluginSource)esMeta.Input["Source"];		
%>/*
===============================================================================
                    EntitySpaces Studio by EntitySpaces, LLC
             Persistence Layer and Business Objects for Microsoft .NET
             EntitySpaces(TM) is a legal trademark of EntitySpaces, LLC
                          http://www.entityspaces.net
===============================================================================
EntitySpaces Version : <%=esMeta.esPlugIn.esVersion%>
EntitySpaces Driver  : <%=esMeta.esPlugIn.esDriver%><%if(!esMeta.esPlugIn.TurnOffDateTimeInClassHeaders){%>
Date Generated       : <%=DateTime.Now.ToString()%><%}%>
===============================================================================
*/

using System;

using EntitySpaces.Core;
using EntitySpaces.Interfaces;
using EntitySpaces.DynamicQuery;

namespace <%=Namespace%>
{
	public partial class <%=source.Entity%> : <%=source.esEntity%>
	{
		public <%=source.Entity%>()
		{
		
		}
	}
}
<script runat="template">

public string GetFileName()
{
	return esMeta.esPlugIn.Entity((esPluginSource)esMeta.Input["Source"]) + ".cs";
}

public EntitySpaces.MetadataEngine.Root TheMetaData
{
	get { return esMeta;  }
	set { esMeta = value; }	
}

</script>
